@mixin reset-margin-padding() {
	padding:0px;
    margin:0px;
}

//makes an element absolute positioned
@mixin absolute($top: auto, $right: auto, $bottom: auto, $left: auto) {
	position: absolute;
    top: $top;
    bottom: $bottom;
    right: $right;
    left: $left;
}

//makes an element fixed
@mixin fixed($top: auto, $right: auto, $bottom: auto, $left: auto) {
  position: fixed;
    top: $top;
    bottom: $bottom;
    right: $right;
    left: $left;
}

//inserts a media query breakpoint
//
// Usage: 
// .element {
//  width: 75%;
//  @include breakpoint(landscape) { width: 60%; }
//
@mixin breakpoint($point) {
  @if $point == portrait {
    @media screen and (orientation: portrait) { @content; }
  }
  @else if $point == landscape {
    @media screen and (orientation: landscape) { @content; }
  }
}

//used for retina displays
//
// Usage:
// div.logo {
//   background: url("logo.png") no-repeat;
//   @include image-2x("logo2x.png", 100px, 25px);
// }

@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}

//center a box horizontally (div, anything)
@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

//Text overflow. If text is bigger than box, insert ellipsis: text he... Wrapper needs to be block or inline-block
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

//converts pixels to em
@mixin font-size($sizeValue: 12px ){
  font-size: $sizeValue; //fallback for old browsers
  font-size: (0.125 * $sizeValue / 1px) + rem;
}

//same with line height
@mixin line-height($heightValue: 12px ){
	line-height: $heightValue + px; //fallback for old browsers
	line-height: (0.125 * $heightValue / 1px) + rem;
}

//overflow mobile y
@mixin overflow-mobile(){
  overflow:scroll;
  -webkit-overflow-scrolling: touch;
}

//box-sizing
@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model; // Safari <= 5
     -moz-box-sizing: $box-model; // Firefox <= 19
          box-sizing: $box-model;
}

//transform
@mixin transform($transforms) {
     -moz-transform: $transforms;
       -o-transform: $transforms;
      -ms-transform: $transforms;
  -webkit-transform: $transforms;
          transform: $transforms;
}

//border radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

//box-shadow
@mixin box-shadow($shadow...) {
   -webkit-box-shadow: $shadow;
   -moz-box-shadow: $shadow;
   box-shadow: $shadow;
}

//opacity
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

//transition
@mixin transition($transition-property, $transition-time, $method) {
    -webkit-transition: $transition-property $transition-time $method;
    -moz-transition: $transition-property $transition-time $method;
    -ms-transition: $transition-property $transition-time $method;
    -o-transition: $transition-property $transition-time $method;
    transition: $transition-property $transition-time $method;
}

//translate3d
@mixin translate3d ($x, $y: 0, $z: 0) {
  -webkit-transform: translate3d($x, $y, $z);
  -moz-transform:    translate3d($x, $y, $z);
  -ms-transform:     translate3d($x, $y, $z);
  -o-transform:      translate3d($x, $y, $z);
}

